---
import { Icon } from 'astro-icon/components'

import { cn } from '@/utils/utils'

import type { Item, ItemClasses } from '@/types/site'

interface Props {
  items?: Item[]
  defaultIcon?: string
  classes?: ItemClasses
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-heading border-primary',
} = classes
---

{
  items && items.length && (
    <div class={containerClass}>
      {items.map(({ title, description, icon, classes: itemClasses = {} }, index = 0) => (
        <div class={cn('flex w-full', panelClass, itemClasses?.panel)}>
          <div class="flex flex-col items-center mr-4 rtl:mr-0 rtl:ml-4">
            <div>
              <div class="flex items-center justify-center">
                {(icon || defaultIcon) && (
                  <Icon
                    name={icon || defaultIcon}
                    class={cn(
                      'w-10 h-10 p-2 rounded-md border-2',
                      defaultIconClass,
                      itemClasses?.icon
                    )}
                  />
                )}
              </div>
            </div>
            {index !== items.length - 1 && <div class="w-px h-full bg-primary dark:bg-primary" />}
          </div>
          <div class={`w-full pt-1 ${index !== items.length - 1 ? 'pb-8' : ''}`}>
            {title && (
              <p class={cn('text-xl font-bold', titleClass, itemClasses?.title)} set:html={title} />
            )}
            {description && (
              <p
                class={cn('text-muted mt-2', descriptionClass, itemClasses?.description)}
                set:html={description}
              />
            )}
          </div>
        </div>
      ))}
    </div>
  )
}
